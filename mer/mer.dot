digraph MER {
  overlap = voronoi;
  splines = true;
  edge [arrowhead=none];

  // Entidades y relaciones.
  Estudiante [shape=box];
  estudiaEn [shape=diamond];
  Escuela [shape=box];
  esDirigidaPor [shape=diamond];
  Maestro [shape=box];
  oEstudiante [shape=circle,label=o,fixedsize=false,width=0,height=0,margin=0];
  Participante [shape=box];
  Coach [shape=box];

  Inscripcion [shape=box];
  esIntegranteDe [shape=diamond];
  coacheaA [shape=diamond];
  Individual [shape=box];
  Grupal [shape=box];
  esEn [shape=diamond];
  Competencia [shape=box];

  subgraph clusterDInscripcion {
    margin=0; style=invis;
    dInscripcion [shape=circle,label=d,fixedsize=false,width=0,height=0,margin=0];
    Individual [shape=box];
    Grupal [shape=box];
    Inscripcion -> dInscripcion;
    dInscripcion -> Individual;
    dInscripcion -> Grupal;

      node [fontsize=10,fixedsize=false,shape=ellipse,width=0,height=0,margin=0];
      edge [weight=100];
      aGrupalNombre [shape=ellipse, label=nombre];
      Grupal -> aGrupalNombre;

      aInscripcionId [shape=ellipse, label=<<u>idInscripcion</u>>];
      Inscripcion -> aInscripcionId;
  }

  perteneceA [shape=diamond];
  Categoria [shape=box];

  Pais [shape=box];
  seEncuentraEn [shape=diamond];
  esOriginarioDe [shape=diamond];

  Ring [shape=box];
  Arbitro [shape=box];
  esArbitradaPor [shape=diamond];

  // Conectores
  Estudiante -> estudiaEn [label=N];
  estudiaEn -> Escuela [label=1];
  Escuela -> esDirigidaPor [label=1];
  esDirigidaPor -> Maestro [label=1];
  Escuela -> seEncuentraEn [label=N];
  seEncuentraEn -> Pais [label=1];

  Estudiante -> oEstudiante;
  oEstudiante -> Participante;
  oEstudiante -> Coach;
  Participante -> esIntegranteDe [label=N];
  esIntegranteDe -> Inscripcion [label=M];
  Coach -> coacheaA [label=1];
  coacheaA -> Inscripcion [label=N];

  Inscripcion -> esEn [label=N];
  esEn -> Competencia [label=M];

  subgraph clusterDCompetencia {
    margin=0; style=invis;
    dCompetencia [shape=circle,label=d,fixedsize=false,width=0,height=0,margin=0];
    Formas [shape=box];
    Combate [shape=box];
    Salto [shape=box];
    Rotura [shape=box];
    CombatePorEquipos [shape=box];
    Competencia -> dCompetencia;
    dCompetencia -> Formas;
    dCompetencia -> Combate;
    dCompetencia -> Salto;
    dCompetencia -> Rotura;
    dCompetencia -> CombatePorEquipos;

      node [fontsize=10,fixedsize=false,shape=ellipse,width=0,height=0,margin=0];
      aCompetenciaId [shape=ellipse, label=<<u>idCompetencia</u>>];
      Competencia -> aCompetenciaId;
  }

  Competencia -> perteneceA [label=N];
  perteneceA -> Categoria [label=1];

  subgraph clusterOCategoria {
    margin=0; style=invis;
    oCategoria [shape=circle,label=o,fixedsize=false,width=0,height=0,margin=0];
    Dan [shape=box];
    Edad [shape=box];
    Peso [shape=box];
    Categoria -> oCategoria [arrowhead=odot];
    oCategoria -> Dan;
    oCategoria -> Edad;
    oCategoria -> Peso;

      node [fontsize=10,fixedsize=false,shape=ellipse,width=0,height=0,margin=0];

      aCategoriaId [shape=ellipse, label=<<u>idCategoria</u>>];
      aCategoriaGenero [shape=ellipse, label=genero];
      Categoria -> aCategoriaId;
      Categoria -> aCategoriaGenero;

      aDanDan [shape=ellipse, label=dan];
      Dan -> aDanDan;

      aEdadMin [shape=ellipse, label=minima];
      aEdadMax[shape=ellipse, label=maxima];
      Edad -> aEdadMin;
      Edad -> aEdadMax;

      aPesoMin [shape=ellipse, label=minimo];
      aPesoMax[shape=ellipse, label=maximo];
      Peso -> aPesoMin;
      Peso -> aPesoMax;
  }

  subgraph clusterArbitraje {
    margin=0; style=invis;
    Competencia -> esArbitradaPor [label=M];
    Ring -> esArbitradaPor [label=1];
    Arbitro -> esArbitradaPor [label=N];
    Arbitro -> esOriginarioDe [label=N];
    esOriginarioDe -> Pais [label=1];

      node [fontsize=10,fixedsize=false,shape=ellipse,width=0,height=0,margin=0];
      aArbitroNombre [shape=ellipse, label=Nombre];
      aArbitroGraduacion [shape=ellipse, label=graduacion];
      aArbitroNroPlaca [shape=ellipse, label=<<u>numeroDePlaca</u>>];
      Arbitro -> aArbitroNombre;
      Arbitro -> aArbitroGraduacion;
      Arbitro -> aArbitroNroPlaca;

      aRingId [shape=ellipse, label=<<u>numeroDeRing</u>>];
      Ring -> aRingId;

      aEsArbitradaPorFuncion [shape=ellipse, label=funcionDelArbitro];
      esArbitradaPor -> aEsArbitradaPorFuncion;
  }

  // Atributos y conectores de conectores
  //   1. Poner de nombre clusterNombre.
  //   2. Agregar:
  //          margin=0; style=invis;
  //          node [fontsize=10,fixedsize=false,shape=ellipse,width=0,height=0,margin=0];
  //   TODO: ver como hacer para acortar los edges.
  subgraph clusterAtributosMaestro {
    margin=0; style=invis;
    node [fontsize=10,fixedsize=false,shape=ellipse,width=0,height=0,margin=0];
    aMaestroNombreCompleto [shape=ellipse, label=nombreCompleto];
    aMaestroGraduacion [shape=ellipse, label=graduacion];
    aMaestroNumeroPlacaDeInstructor [shape=ellipse, label=<<u>placaDeInstructor</u>>];
    Maestro -> aMaestroNombreCompleto;
    Maestro -> aMaestroGraduacion;
    Maestro -> aMaestroNumeroPlacaDeInstructor;
  }

  subgraph clusterAtributosEstudiante {
    margin=0; style=invis;
    node [fontsize=10,fixedsize=false,shape=ellipse,width=0,height=0,margin=0];
    aEstudianteId [shape=ellipse, label=<<u>idEstudiante</u>>];
    aEstudianteNombreCompleto [shape=ellipse, label=nombreCompleto];
    aEstudianteGraduacion [shape=ellipse, label=graduacion];
    aEstudianteCertificadoITF [shape=ellipse, label=numeroCertificadoITF];
    aEstudianteFoto [shape=ellipse, label="foto?"];
    Estudiante -> aEstudianteId;
    Estudiante -> aEstudianteNombreCompleto;
    Estudiante -> aEstudianteGraduacion;
    Estudiante -> aEstudianteCertificadoITF;
    Estudiante -> aEstudianteFoto;
  }

  subgraph clusterAtributosParticipante {
    margin=0; style=invis;
    node [fontsize=10,fixedsize=false,shape=ellipse,width=0,height=0,margin=0];
    aParticipanteDNI [shape=ellipse, label=DNI];
    aParticipanteFechaDeNac [shape=ellipse, label=fechaDeNacimiento];
    aParticipanteGenero [shape=ellipse, label=genero];
    aParticipantePeso [shape=ellipse, label=peso];
    Participante -> aParticipanteDNI;
    Participante -> aParticipanteFechaDeNac;
    Participante -> aParticipanteGenero;
    Participante -> aParticipantePeso;
  }

  subgraph clusterAtributosEsIntegranteDe {
    margin=0; style=invis;
    node [fontsize=10,fixedsize=false,shape=ellipse,width=0,height=0,margin=0];
    aEsIntegranteDeEsTitular [shape=ellipse, label=esTitular];
    esIntegranteDe -> aEsIntegranteDeEsTitular;
  }

  subgraph clusterAtributosEsEn {
    margin=0; style=invis;
    node [fontsize=10,fixedsize=false,shape=ellipse,width=0,height=0,margin=0];
    aEsEnPuesto [shape=ellipse, label=puesto];
    esEn -> aEsEnPuesto;
  }

  subgraph clusterAtributosPais {
    margin=0; style=invis;
    node [fontsize=10,fixedsize=false,shape=ellipse,width=0,height=0,margin=0];
    aPaisId [shape=ellipse, label=<<u>idPais</u>>];
    aPaisNombre [shape=ellipse, label=nombre];
    Pais -> aPaisId;
    Pais -> aPaisNombre;
  }
}


